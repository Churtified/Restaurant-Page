(()=>{"use strict";var n={772:(n,e,t)=>{t.d(e,{Z:()=>u});var o=t(537),a=t.n(o),r=t(645),i=t.n(r),c=t(667),s=t.n(c),d=new URL(t(73),t.b),l=i()(a()),p=s()(d);l.push([n.id,"* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    /* font-family: 'Smooch', cursive; */\n}\n\n.title {\n    padding: 10px 0px 0px 10px;\n    color: #fff;\n    font-size: 60px;\n    font-family: 'Smooch', cursive;\n}\n\n.copy {\n    padding-left: 10px;\n    color: #fff;\n    font-size: 40px;\n}\n\n#content {\n    height: 100vh;\n    width: 100vw;\n    background: url("+p+");\n    background-size: cover;\n}\n\n.main {\n    margin-top: 30px;\n    background: rgba(220, 220, 220, 0.3);\n    height: 50%;\n    padding: 20px 300px 20px 50px;\n}\n\n.menu {\n    color:#fff;\n}\n\n.headerContainer {\n    display: flex;\n}\n\n.navContainer {\n    width: 100%;\n}\n\n.navList {\n    display: flex;\n    justify-content: space-evenly;\n    padding-top: 10px;\n    list-style: none;\n}\n\n.navList {\n    color: #fff;\n    font-size: 40px;\n    font-family: 'Smooch', cursive;\n}\n\n.contactTitle {\n    color: #fff;\n    font-size: 40px;\n}\n\n.contactInfo {\n    color: #fff;\n    margin-top: 20px;\n    font-size: 25px;\n}\n\n.itemContainer {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n}","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,oCAAoC;AACxC;;AAEA;IACI,0BAA0B;IAC1B,WAAW;IACX,eAAe;IACf,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,mDAA8C;IAC9C,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,oCAAoC;IACpC,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,6BAA6B;IAC7B,iBAAiB;IACjB,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,eAAe;IACf,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,6BAA6B;AACjC",sourcesContent:["* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    /* font-family: 'Smooch', cursive; */\n}\n\n.title {\n    padding: 10px 0px 0px 10px;\n    color: #fff;\n    font-size: 60px;\n    font-family: 'Smooch', cursive;\n}\n\n.copy {\n    padding-left: 10px;\n    color: #fff;\n    font-size: 40px;\n}\n\n#content {\n    height: 100vh;\n    width: 100vw;\n    background: url(\"../assets/img/thaifood.jpeg\");\n    background-size: cover;\n}\n\n.main {\n    margin-top: 30px;\n    background: rgba(220, 220, 220, 0.3);\n    height: 50%;\n    padding: 20px 300px 20px 50px;\n}\n\n.menu {\n    color:#fff;\n}\n\n.headerContainer {\n    display: flex;\n}\n\n.navContainer {\n    width: 100%;\n}\n\n.navList {\n    display: flex;\n    justify-content: space-evenly;\n    padding-top: 10px;\n    list-style: none;\n}\n\n.navList {\n    color: #fff;\n    font-size: 40px;\n    font-family: 'Smooch', cursive;\n}\n\n.contactTitle {\n    color: #fff;\n    font-size: 40px;\n}\n\n.contactInfo {\n    color: #fff;\n    margin-top: 20px;\n    font-size: 25px;\n}\n\n.itemContainer {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n}"],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],c=0;c<n.length;c++){var s=n[c],d=o.base?s[0]+o.base:s[0],l=r[d]||0,p="".concat(d," ").concat(l);r[d]=l+1;var u=t(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var f=a(A,o);o.byIndex=c,e.splice(c,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var c=t(r[i]);e[c].references--}for(var s=o(n,a),d=0;d<r.length;d++){var l=t(r[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},73:(n,e,t)=>{n.exports=t.p+"27fb1a0d7e50ab42d6dd.jpeg"}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),a=t.n(o),r=t(569),i=t.n(r),c=t(565),s=t.n(c),d=t(216),l=t.n(d),p=t(589),u=t.n(p),A=t(772),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;const m=function(){const n=document.querySelector("#content"),e=document.createElement("div");e.classList.add("headerContainer");const t=document.createElement("h1");t.classList.add("title"),t.textContent="nang kwak eatery";const o=document.createElement("p");o.classList.add("copy"),o.textContent="inspired by traditional thai street foods",n.appendChild(e),n.appendChild(o),e.appendChild(t),function(){document.querySelector("#content");const n=document.querySelector(".headerContainer"),e=document.createElement("nav");e.classList.add("navContainer");const t=document.createElement("ul");t.classList.add("navList");const o=document.createElement("li"),a=document.createElement("li"),r=document.createElement("li");o.classList.add("navItems"),a.classList.add("navItems"),r.classList.add("navItems"),o.textContent="Home",a.textContent="Menu",r.textContent="Contact",n.appendChild(e),e.appendChild(t),t.appendChild(o),t.appendChild(a),t.append(r)}()},h=document.querySelector("#content"),C=[{name:"Pad Thai",description:"Authentic Pad Thai on the streets of Thailand has a distinct fishy/prawny funk (which sounds thoroughly unappetising but is actually completely addictive and the very essence of true Thai street food)",price:"$15"},{name:"Massaman Curry",description:"Massaman curry is a rich, flavourful, and mildly spicy Thai curry. It is a fusion dish, combining ingredients from Persia, the Indian subcontinent, and the Malay Archipelago with ingredients more commonly used in native Thai cuisine to make massaman curry paste.",price:"$20"},{name:"Som Tum",description:"Zingy and spicy cold salad made with green papaya, a fruit which might be unfamiliar to most Westerners. Green papaya is simply unripened papaya, and has a juicy and slightly crunchy texture with a neutral taste.",price:"$15"}];console.log("working!!");const v=document.querySelector("#content");document.addEventListener("click",(n=>{const e=n.target.innerText;"Home"===e?(v.innerHTML="",m()):"Menu"===e?(v.innerHTML="",m(),function(){const n=document.createElement("main");n.classList.add("main"),document.createElement("h1").classList.add("menuTitle");const e=document.createElement("div");e.classList.add("itemContainer"),C.forEach((t=>{const o=document.createElement("h2");o.textContent=t.name;const a=document.createElement("p");a.textContent=t.description;const r=document.createElement("h3");r.textContent=t.price,o.classList.add("menu"),a.classList.add("menu"),r.classList.add("menu"),e.appendChild(o),e.appendChild(a),e.appendChild(r),n.appendChild(e)})),h.appendChild(n)}()):"Contact"===e&&(v.innerHTML="",m(),function(){const n=document.querySelector("#content"),e=document.createElement("main");e.classList.add("main");const t=document.createElement("h2");t.classList.add("contactTitle"),t.textContent="Contact Us";const o=document.createElement("p");o.classList.add("contactInfo"),o.textContent="Whether you’ve made an booking and have questions about that booking, have questions about reservations or you simply have a general inquiry into our restaurant please contact us via info@nangkwokfakery.co",e.appendChild(t),e.appendChild(o),n.appendChild(e)}())})),m()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,